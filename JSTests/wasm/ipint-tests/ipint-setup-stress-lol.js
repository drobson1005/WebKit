load('../libwabt.js');

let wat = `
(module
    (func $one (param i32) (result i32)
        (local.get 0)
        (i32.const 1)
        (i32.add)
        (return)
    )
    (func $ten (param i32) (result i32)
        (local.get 0)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (call $one)
        (return)
    )
    (func $hundred (param i32) (result i32)
        (local.get 0)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (call $ten)
        (return)
    )
    (func $thousand (param i32) (result i32)
        (local.get 0)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (call $hundred)
        (return)
    )
    (func $tenk (param i32) (result i32)
        (local.get 0)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (call $thousand)
        (return)
    )
    (func $hundredk (param i32) (result i32)
        (local.get 0)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (call $tenk)
        (return)
    )
    (func $million (export "million") (param i32) (result i32)
        (local.get 0)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (call $hundredk)
        (return)
    )
)
`

const wabtModule = await WabtModule();
const binary = wabtModule.parseWat("filenamesAreCool", wat, {}).toBinary({}).buffer;
write('ipint-stress-lol.wasm', binary);
